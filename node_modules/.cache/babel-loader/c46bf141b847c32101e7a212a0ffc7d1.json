{"ast":null,"code":"var _jsxFileName = \"C:\\\\tests\\\\food-order-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/tests/food-order-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AACxB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,UAAMC,qBAAqB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CAAsBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EAAtD,CAA9B;AAGA,UAAMC,kBAAkB,GAAGT,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYK,KAAZ,GAAoBT,MAAM,CAACI,IAAP,CAAYM,MAA/E;AACA,WAAO;AACLd,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEW;AAFR,KAAP;AAID;;AACD,SAAOb,gBAAP;AACD,CAdD;;AAgBA,MAAMgB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMoB,oBAAoB,GAAIX,IAAD,IAAU;AACrCU,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMY,uBAAuB,GAAIT,EAAD,IAAQ;AACtCO,IAAAA,kBAAkB,CAAC;AAACb,MAAAA,IAAI,EAAE,QAAP;AAAiBM,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMU,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADC;AAElBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBqB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n  if(action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    \n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState\n}\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: 'ADD', item: item})\n  }\n\n  const removeItemToCartHandler = (id) => {\n    dispatchCartAction({type: 'REMOVE', id: id})\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  }\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}