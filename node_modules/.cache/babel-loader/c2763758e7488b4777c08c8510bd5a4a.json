{"ast":null,"code":"var _jsxFileName = \"C:\\\\tests\\\\food-order-project\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Input } from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MealItemForm = props => {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1 - 5)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["C:/tests/food-order-project/src/components/Meals/MealItem/MealItemForm.js"],"names":["useRef","useState","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;;AAEA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AAEA,QACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACGF,mBAAmB,GAAG,CADzB,IAEGA,mBAAmB,GAAG,CAH3B,EAIE;AACAR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACD;AACF,GAdD;;AAgBA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACe,IAAzB;AAA+B,IAAA,QAAQ,EAAET,aAAzC;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAED,cAAZ;AAA4B,MAAA,KAAK,EAAC,QAAlC;AAA2C,MAAA,KAAK,EAAE;AAChDW,QAAAA,EAAE,EAAE,YAAYd,KAAK,CAACc,EAD0B;AAEhDC,QAAAA,IAAI,EAAE,QAF0C;AAGhDC,QAAAA,GAAG,EAAE,GAH2C;AAIhDC,QAAAA,GAAG,EAAE,GAJ2C;AAKhDC,QAAAA,IAAI,EAAE,GAL0C;AAMhDC,QAAAA,YAAY,EAAE;AANkC;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAUG,CAAClB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCM;;GAAMF,Y;;KAAAA,Y","sourcesContent":["import { useRef, useState } from 'react';\nimport { Input } from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\n\nexport const MealItemForm = (props) => {\n  const [amountIsValid, setAmountIsValid] = useState(true)\n  const amountInputRef = useRef()\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if(\n      enteredAmount.trim().length === 0 \n      || enteredAmountNumber < 1 \n      || enteredAmountNumber > 5\n    ) {\n      setAmountIsValid(false)\n      return\n    }\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input ref={amountInputRef} label=\"Amount\" input={{\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1', \n        defaultValue: '1'\n      }} />\n      <button>+ Add</button>\n      {!amountIsValid && <p>Please enter a valid amount (1 - 5)</p>}\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}